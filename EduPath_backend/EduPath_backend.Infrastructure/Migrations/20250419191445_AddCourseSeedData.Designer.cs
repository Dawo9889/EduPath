// <auto-generated />
using System;
using EduPath_backend.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduPath_backend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250419191445_AddCourseSeedData")]
    partial class AddCourseSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduPath_backend.Domain.Entities.Assignment", b =>
                {
                    b.Property<int>("Id_Assignment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Assignment"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Course")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id_Assignment");

                    b.HasIndex("Id_Course");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.AssignmentUser", b =>
                {
                    b.Property<int>("Id_Course")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("Filepath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Course", "Id_User");

                    b.HasIndex("Id_User");

                    b.ToTable("AssignmentUsers");
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id_Course")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Course"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Course");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id_Course = 1,
                            Description = "Learn the basics of programming using C#.",
                            Name = "Introduction to Programming"
                        },
                        new
                        {
                            Id_Course = 2,
                            Description = "Explore advanced topics in database design and optimization.",
                            Name = "Advanced Database Systems"
                        },
                        new
                        {
                            Id_Course = 3,
                            Description = "Build modern web applications using ASP.NET Core.",
                            Name = "Web Development with ASP.NET"
                        });
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.CourseUser", b =>
                {
                    b.Property<int>("Id_Course")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.HasKey("Id_Course", "Id_User");

                    b.HasIndex("Id_User");

                    b.ToTable("CourseUsers");
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_User"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.Assignment", b =>
                {
                    b.HasOne("EduPath_backend.Domain.Entities.Course", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("Id_Course")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.AssignmentUser", b =>
                {
                    b.HasOne("EduPath_backend.Domain.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Id_Course")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduPath_backend.Domain.Entities.User", "User")
                        .WithMany("AssignmentUsers")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.CourseUser", b =>
                {
                    b.HasOne("EduPath_backend.Domain.Entities.Course", "Course")
                        .WithMany("CourseUsers")
                        .HasForeignKey("Id_Course")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduPath_backend.Domain.Entities.User", "User")
                        .WithMany("CourseUsers")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.Course", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("CourseUsers");
                });

            modelBuilder.Entity("EduPath_backend.Domain.Entities.User", b =>
                {
                    b.Navigation("AssignmentUsers");

                    b.Navigation("CourseUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
